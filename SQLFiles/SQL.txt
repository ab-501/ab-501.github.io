DROP TABLE IF EXISTS MultipleModulesAttempt;
DROP TABLE IF EXISTS UsersSignup;
DROP TABLE IF EXISTS ModuleLecturers;
DROP TABLE IF EXISTS ModuleMaterials;
DROP TABLE IF EXISTS StudentCourseRecord;
DROP TABLE IF EXISTS StudentModuleRecord;
DROP TABLE IF EXISTS AcademicYears;
DROP TABLE IF EXISTS CourseModules;
DROP TABLE IF EXISTS Modules;
DROP TABLE IF EXISTS Courses;
DROP TABLE IF EXISTS Departments;
DROP TABLE IF EXISTS Users;

CREATE TABLE Users (
    UserID INT AUTO_INCREMENT PRIMARY KEY,
    FirstName VARCHAR(50),
    Surname VARCHAR(50),
    Email VARCHAR(100),
    UserType ENUM('Student', 'Lecturer', 'Manager'),
    Gender ENUM('Male','Female','Other'),
    DateOfBirth DATE,
    QualificationName ENUM('PhD', 'MSc', 'MA', 'BA', 'BSc'),
    Password VARCHAR(255),
    ManagedBy INT,
    Active BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (ManagedBy) REFERENCES Users(UserID) -- Self-referencing to indicate managers.
);

CREATE TABLE Departments (
    DepartmentID INT AUTO_INCREMENT PRIMARY KEY,
    DepartmentName VARCHAR(100)
);

CREATE TABLE Courses (
    CourseID INT AUTO_INCREMENT PRIMARY KEY,
    DepartmentID INT,
    CourseName VARCHAR(100),
    Level ENUM('Undergraduate', 'Postgraduate'),
    Information TEXT,
    MaxAttemptsOfModules INT DEFAULT 20,
    NumCompensatedModules INT DEFAULT 0,
    FOREIGN KEY (DepartmentID) REFERENCES Departments(DepartmentID)
);

CREATE TABLE Modules (
    ModuleID INT AUTO_INCREMENT PRIMARY KEY,
    ModuleCode VARCHAR(50),
    ModuleName VARCHAR(100),
    Credit INT,
    MaxAttempts INT DEFAULT 3,
    Information TEXT
);

CREATE TABLE CourseModules (
    CourseID INT,
    ModuleID INT,
    PRIMARY KEY (CourseID, ModuleID),
    FOREIGN KEY (CourseID) REFERENCES Courses(CourseID),
    FOREIGN KEY (ModuleID) REFERENCES Modules(ModuleID)
);

CREATE TABLE AcademicYears (
    AcademicYearID INT AUTO_INCREMENT PRIMARY KEY,
    YearDescription VARCHAR(100),
    Semester ENUM('1', '2')
);


CREATE TABLE StudentModuleRecord (
    StudentID INT,
    ModuleID INT,
    AcademicYearID INT,
    AttemptNumber INT DEFAULT 1,
    LabMark DECIMAL,
    ExamMark DECIMAL,
    FOREIGN KEY (StudentID) REFERENCES Users(UserID),
    FOREIGN KEY (ModuleID) REFERENCES Modules(ModuleID),
    FOREIGN KEY (AcademicYearID) REFERENCES AcademicYears(AcademicYearID),
    PRIMARY KEY (StudentID, ModuleID, AttemptNumber)
);

CREATE TABLE StudentCourseRecord (
    StudentID INT,
    CourseID INT,
    EnrollmentStatus ENUM('Enrolled', 'Withdrawn', 'Completed'),
    Decision ENUM('Award', 'Resit', 'withdraw','NotDecided'),
    Credits INT,
    FOREIGN KEY (StudentID) REFERENCES Users(UserID),
    FOREIGN KEY (CourseID) REFERENCES Courses(CourseID),
    PRIMARY KEY (StudentID, CourseID)
);

CREATE TABLE ModuleMaterials (
    Week INT,
    ModuleID INT,
    LectureNotePath TEXT,
    LabNotePath TEXT,
    Information TEXT,
    PRIMARY KEY (Week, ModuleID),
    FOREIGN KEY (ModuleID) REFERENCES Modules(ModuleID)
);


CREATE TABLE ModuleLecturers (
    LecturerID INT,
    ModuleID INT,
    PRIMARY KEY (LecturerID, ModuleID),
    FOREIGN KEY (LecturerID) REFERENCES Users(UserID),
    FOREIGN KEY (ModuleID) REFERENCES Modules(ModuleID)
);

CREATE TABLE UsersSignup (
    TempUserID INT AUTO_INCREMENT PRIMARY KEY,
    FirstName VARCHAR(50),
    Surname VARCHAR(50),
    Email VARCHAR(100),
    UserType ENUM('Student', 'Lecturer', 'Manager'),
    Gender ENUM('Male','Female','Other'),
    DateOfBirth DATE,
    QualificationName ENUM('PhD', 'MSc', 'MA', 'BA', 'BSc'),
    Password VARCHAR(255)
);
-- When creating a user assume manager ID is the manager who approved them?

-- This table is for the business rule stating that you can have a maximum number of attempts for a group of modules

-- Make sure when adding to this table that the groupID is not already used for the same moduleID and courseID
CREATE TABLE MultipleModulesAttempt(
   GroupID INT,
   ModuleID INT,
   CourseID INT,
   TotalAttempts INT,
   PRIMARY KEY (ModuleID, CourseID, GroupID),
   FOREIGN KEY (ModuleID) REFERENCES Modules(ModuleID),
   FOREIGN KEY (CourseID) REFERENCES Courses(CourseID)
);

INSERT INTO Users (FirstName, Surname, Email, UserType,Gender,DateOfBirth, QualificationName, Password) VALUES
    ('John', 'Doe', 'john.doe@example.com', 'Student','Male','2000/10/10', NULL, 'johnpassword'),
    ('Jane', 'Smith', 'jane.smith@example.com', 'Lecturer','Male','2000/10/10', 'PhD', 'janepassword'),
    ('Emily', 'Johnson', 'emily.johnson@example.com', 'Student','Male','2000/10/10', NULL, 'emilypassword'),
    ('Michael', 'Williams', 'michael.williams@example.com', 'Lecturer','Male','2000/10/10', 'MSc', 'michaelpassword'),
    ('Ann', 'Brown', 'ann.brown@example.com', 'Manager','Male','2000/10/10', NULL, 'annpassword'),
    ('Tom', 'Davis', 'tom.davis@example.com', 'Lecturer','Male','2000/10/10', 'PhD', 'tompassword'),
    ('Bob', 'Miller', 'bob.miller@example.com', 'Student','Male','2000/10/10', NULL, 'bobpassword'),
    ('Alice', 'Wilson', 'alice.wilson@example.com', 'Lecturer','Male','2000/10/10', 'BSc', 'alicepassword');

INSERT INTO Departments (DepartmentName) VALUES
('Computer Science'),
('Business Studies'),
('Physics'),
('Mathematics'),
('Art & Design'),
('Humanities');

INSERT INTO Courses (DepartmentID, CourseName, Level,Information) VALUES
(1, 'BSc in Computer Science', 'Undergraduate','SAMPLE INFORMATION'),
(2,  'BBA in Business Administration', 'Undergraduate','SAMPLE INFORMATION'),
(3,  'BSc in Applied Physics', 'Undergraduate','SAMPLE INFORMATION'),
(4,  'BSc in Mathematics', 'Undergraduate','SAMPLE INFORMATION'),
(5,  'BA in Fine Arts', 'Undergraduate','SAMPLE INFORMATION'),
(6,  'BA in History', 'Undergraduate','SAMPLE INFORMATION');

-- Inserting modules
INSERT INTO Modules (ModuleCode, ModuleName, Credit,Information) VALUES
('CS101', 'Programming 101', 10,'SAMPLE TEXT'),
('CS102', 'Web Development', 10,'SAMPLE TEXT'),
('PHY101', 'Quantum Mechanics', 10,'SAMPLE TEXT'),
('MAT101', 'Linear Algebra', 10,'SAMPLE TEXT'),
('ART101', 'Modern Art', 10,'SAMPLE TEXT'),
('HIS101', 'Medieval History', 10,'SAMPLE TEXT'),
('CS103', 'Func programming', 10,'SAMPLE TEXT'),
('CS104', 'Data Structures', 10,'SAMPLE TEXT'),
('PHY102', 'Relativity', 10,'SAMPLE TEXT'),
('MAT102', 'Calculus', 10,'SAMPLE TEXT'),
('ART102', 'Renaissance Art', 10,'SAMPLE TEXT'),
('HIS102', 'Modern History', 10,'SAMPLE TEXT');

-- Linking courses with modules
INSERT INTO CourseModules (CourseID, ModuleID) VALUES
(1, 1),
(1, 2),
(1, 7),
(1, 8),
(3, 3),
(4, 4),
(5, 5),
(6, 6);

-- Defining academic years
INSERT INTO AcademicYears (YearDescription, Semester) VALUES
('2022/2023', '1'),
('2022/2023', '2');

-- Simulating students enrolling in modules, and recording their marks
INSERT INTO StudentModuleRecord (StudentID, ModuleID, AcademicYearID,AttemptNumber, LabMark, ExamMark) VALUES
(1, 1, 1, 1, 40.0, 28.0),
(1, 1, 2, 2, 56.5, 49.0),
(1, 2, 2, 1, 70.0, 75.0),
(1, 7, 2, 1, 56.5, 64.0),
(1, 8, 2, 1, 56.5, 64.0),
(3, 1, 1, 1, 88.0, 91.5),
(7, 3, 1, 1, 62.0, 68.5),
(1, 3, 1, 1, 62.0, 68.5),
(3, 3, 1, 1, 62.0, 68.5);

-- Enrolling students in courses
INSERT INTO StudentCourseRecord (StudentID, CourseID, EnrollmentStatus,Decision, Credits) VALUES
(1, 1, 'Enrolled','NotDecided', 20),
(3, 1, 'Enrolled','NotDecided', 20),
(7, 3, 'Enrolled','NotDecided', 20);

-- Assigning lecturers to modules for specific academic years
INSERT INTO ModuleLecturers (LecturerID, ModuleID) VALUES
(2, 1),
(4, 2),
(6, 5),
(8, 3),
(2, 3);

-- Adding educational materials for certain modules
INSERT INTO ModuleMaterials (ModuleID, Week, LectureNotePath, LabNotePath,Information) VALUES
(1, 1, '/path/to/lecture1.pdf', '/path/to/lab1.pdf','SAMPLE TEXT'),
(2, 2, '/path/to/lecture2.pdf', '/path/to/lab2.pdf','SAMPLE TEXT'),
(3, 3, '/path/to/lecture3.pdf', NULL,'SAMPLE TEXT'),
(5, 1, '/path/to/lecture4.pdf', NULL,'SAMPLE TEXT');

INSERT INTO UsersSignup (FirstName, Surname, Email, UserType,Gender,DateOfBirth, QualificationName, Password) VALUES
    ('Sam', 'Taylor', 'sam.taylor@example.com', 'Student','Male','2000/10/10', NULL, 'sampassword'),
    ('Linda', 'Jones', 'linda.jones@example.com', 'Lecturer','Male','2000/10/10', 'PhD', 'lindapassword'),
    ('Grace', 'Thompson', 'grace.thompson@example.com', 'Student','Male','2000/10/10', NULL, 'gracepassword'),
    ('Henry', 'Moore', 'henry.moore@example.com', 'Lecturer','Male','2000/10/10', 'MSc', 'henrypassword'),
    ('Nina', 'White', 'nina.white@example.com', 'Manager','Male','2000/10/10', NULL, 'ninapassword'),
    ('Max', 'Clark', 'max.clark@example.com', 'Lecturer','Male','2000/10/10', 'PhD', 'maxpassword'),
    ('Jake', 'Hall', 'jake.hall@example.com', 'Student','Male','2000/10/10', NULL, 'jakepassword'),
    ('Sophie', 'Anderson', 'sophie.anderson@example.com', 'Lecturer','Male','2000/10/10', 'BSc', 'sophiepassword');

INSERT INTO MultipleModulesAttempt (GroupID,ModuleID, CourseID, TotalAttempts) VALUES
(1,1, 1, 6),
(1,2, 1, 6),
(1,8, 1, 6),
(1,7, 1, 6);
